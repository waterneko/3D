
//=============================================================================//
// 
// Name : Texturefile.h
// Describe : テクスチャファイル処理
// Author : 
// Create Date : 2018/05/01
// Modify Date : 2018/06/05
//=============================================================================//
#ifndef _TEXTUREFILE_H_
#define _TEXTUREFILE_H_

//*****************************************************************************//
// (1) インクルードファイル
//*****************************************************************************//
#include "D3DUtility.h"				// Directx9インクルードファイル処理

//*****************************************************************************//
// (2) マクロ定義
//*****************************************************************************//
#define	MAXNUM_TEXTUREFILE	(100)					// 最大テクスチャファイル数

#define	PATH_TITLETEXTURE	("Data/Texture/Title/")		// タイトル用テクスチャファイルパス
#define	PATH_STAGETEXTURE	("Data/Texture/Stage/")		// ステージ用テクスチャファイルパス
#define	PATH_OTHERTEXTURE	("Data/Texture/Other/")		// その他用テクスチャファイルパス
//*****************************************************************************//
// (3) ユーザー定義データ型
//*****************************************************************************//

// { 列挙型 }

// { 構造体 }

// { クラス }

// テクスチャクラス
class STexturefile
{
private:
	LPDIRECT3DDEVICE9		pDevice;						// デバイスオブジェクト
	LPDIRECT3DTEXTURE9		pTexture;  						// テクスチャへのポインター
	D3DXVECTOR2				vSize;							// テクスチャの幅と高さ
public:
	STexturefile(LPDIRECT3DDEVICE9 D3dDevice);				// コンストラクタ
	~STexturefile();										// デストラクタ
public:
	HRESULT LoadTexturefile(char* path, char* name);		// テクスチャを読込み

	// [取得関数]
	LPDIRECT3DTEXTURE9 GetTexture() { return pTexture; };	// テクスチャを取得する
	D3DXVECTOR2 GetSize() { return vSize; };				// サイズを取得する
};

//*****************************************************************************//
// (4) プロトタイプ宣言(外部でも使える関数)
//*****************************************************************************//

#endif