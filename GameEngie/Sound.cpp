
//=============================================================================//
// 
// Name : Sound.cpp
// Describe : サウンド処理
// Author : 
// Create Date : 2018/05/01
// Modify Date : 2018/06/05
//=============================================================================//

//*****************************************************************************//
// (1) インクルードファイル
//*****************************************************************************//
#include "Sound.h"				// サウンド処理

//*****************************************************************************//
// (2) マクロ定義
//*****************************************************************************//

//*****************************************************************************//
// (3) ユーザー定義データ関数 (クラス関数)
//*****************************************************************************//

//*****************************************************************************//
// (4) グローバル変数:
//*****************************************************************************//
// 全体用
IXAudio2*					g_pXAudio2 = NULL;					// XAudio2オブジェクトへのインターフェイス
IXAudio2MasteringVoice*		g_pMasteringVoice = NULL;			// マスターボイス
//*****************************************************************************//
// (5) プロトタイプ宣言(自分だけ使える関数)
//*****************************************************************************//

//*****************************************************************************//
// (6) 関数
//*****************************************************************************//

//==========================================================================================================//
// NAME: HRESULT InitSound()
// DESC: サウンド処理 マスターボイスの初期化
//==========================================================================================================//
HRESULT InitSound()
{
	HRESULT hr;

	// COMライブラリの初期化
	CoInitializeEx(NULL, COINIT_MULTITHREADED);

	// XAudio2オブジェクトの作成
	hr = XAudio2Create(&g_pXAudio2, 0);
	if (FAILED(hr))
	{
		MessageBox(NULL, "XAudio2オブジェクトの作成に失敗！", "警告！", MB_ICONWARNING);

		// COMライブラリの終了処理
		CoUninitialize();
		return E_FAIL;
	}

	// マスターボイスの生成
	hr = g_pXAudio2->CreateMasteringVoice(&g_pMasteringVoice);
	if (FAILED(hr))
	{
		MessageBox(NULL, "マスターボイスの生成に失敗！", "警告！", MB_ICONWARNING);

		if (g_pXAudio2)
		{
			// XAudio2オブジェクトの開放
			g_pXAudio2->Release();
			g_pXAudio2 = NULL;
		}

		// COMライブラリの終了処理
		CoUninitialize();

		return E_FAIL;
	}

	return S_OK;
}

//==========================================================================================================//
// NAME: VOID UninitSound()
// DESC: サウンド処理 解放処理
//==========================================================================================================//
VOID UninitSound()
{

	// マスターボイスの破棄
	g_pMasteringVoice->DestroyVoice();
	g_pMasteringVoice = NULL;

	// XAudio2オブジェクトの開放
	SAFE_RELEASE(g_pXAudio2)

	// COMライブラリの終了処理
	CoUninitialize();
}

//==========================================================================================================//
// NAME: IXAudio2* GetXaudio2()
// DESC: サウンド処理 XAudio2オブジェクトへのポインターを取得する
//==========================================================================================================//
IXAudio2* GetXaudio2()
{
	return g_pXAudio2;
}

//==========================================================================================================//
// NAME: IXAudio2MasteringVoice* GetMasterVoice()
// DESC: サウンド処理 マスターボイスを取得する
//==========================================================================================================//
IXAudio2MasteringVoice* GetMasterVoice()
{
	return g_pMasteringVoice;
}
